/* tslint:disable */
/* eslint-disable */
/**
 * OpenAPI Petstore
 * This is a sample server Petstore server. For this sample, you can use the api key `special-key` to test the authorization filters.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';

export interface GetOrdersRequest {
    orderIds: number;
    hoge: string;
}

/**
 * no description
 */
export class DefaultApi extends runtime.BaseAPI {

    /**
     * Your GET endpoint
     */
    async getOrdersRaw(requestParameters: GetOrdersRequest): Promise<runtime.ApiResponse<Array<string>>> {
        if (requestParameters.orderIds === null || requestParameters.orderIds === undefined) {
            throw new runtime.RequiredError('orderIds','Required parameter requestParameters.orderIds was null or undefined when calling getOrders.');
        }

        if (requestParameters.hoge === null || requestParameters.hoge === undefined) {
            throw new runtime.RequiredError('hoge','Required parameter requestParameters.hoge was null or undefined when calling getOrders.');
        }

        const queryParameters: runtime.HTTPQuery = {};

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/store/orders/{orderIds}/{hoge}`.replace(`{${"orderIds"}}`, encodeURIComponent(String(requestParameters.orderIds))).replace(`{${"hoge"}}`, encodeURIComponent(String(requestParameters.hoge))),
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        });

        return new runtime.JSONApiResponse<any>(response);
    }

    /**
     * Your GET endpoint
     */
    async getOrders(requestParameters: GetOrdersRequest): Promise<Array<string>> {
        const response = await this.getOrdersRaw(requestParameters);
        return await response.value();
    }

}
